openapi: 3.0.0
info:
  title: Inventory Management API
  version: 1.0.0
  description: |
    A RESTful API to manage users, products, and analytics for a small business.
servers:
  - url: http://localhost:3000
    description: Local development server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Product:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        sku:
          type: string
        image_url:
          type: string
        description:
          type: string
        quantity:
          type: integer
        price:
          type: number
      required:
        - name
        - type
        - sku
        - quantity
        - price
    User:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password
    AuthResponse:
      type: object
      properties:
        access_token:
          type: string
    AnalyticsSummary:
      type: object
      properties:
        totalProducts:
          type: integer
        totalQuantity:
          type: integer
        totalValue:
          type: number
security:
  - bearerAuth: []
paths:
  /register:
    post:
      summary: Register a new user
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Invalid input
  /login:
    post:
      summary: Login an existing user
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Invalid credentials
  /products:
    get:
      summary: Get a list of all products
      tags:
        - Products
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: Page number for pagination
        - in: query
          name: limit
          schema:
            type: integer
          description: Number of items per page
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '401':
          description: Unauthorized
    post:
      summary: Add a new product
      tags:
        - Products
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Product created successfully
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
  /products/{id}/quantity:
    put:
      summary: Update a product's quantity
      tags:
        - Products
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Product ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
      responses:
        '200':
          description: Quantity updated successfully
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
        '404':
          description: Product not found
  /analytics/top-products:
    get:
      summary: Get top products analytics
      tags:
        - Analytics
      responses:
        '200':
          description: Top products analytics
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '401':
          description: Unauthorized